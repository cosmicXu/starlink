{"ast":null,"code":"var _jsxFileName = \"/Users/boyuxu/IdeaProjects/laoOffer/starlink/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport axios from 'axios';\nimport { BASE_URL, NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from '../constants';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport WorldMap from './WorldMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.showMap = selected => {\n      this.setState(preState => ({ ...preState,\n        satList: [...selected]\n      }));\n    };\n\n    this.showNearbySatellite = setting => {\n      this.setState({\n        isLoadingList: true,\n        setting: setting\n      });\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        latitude,\n        longitude,\n        elevation,\n        altitude\n      } = setting;\n      const url = `${BASE_URL}/api/${NEARBY_SATELLITE}/${latitude}/${longitude}/${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        isLoadingList: true\n      });\n      axios.get(url).then(response => {\n        console.log(response.data);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false\n        });\n      }).catch(error => {\n        console.log('err in fetch satellite -> ', error);\n      });\n    };\n\n    this.state = {\n      satInfo: null,\n      satList: null,\n      setting: null,\n      isLoadingList: false\n    };\n  }\n\n  render() {\n    const {\n      isLoadingList,\n      satInfo,\n      satList,\n      setting\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        className: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(SatSetting, {\n          onShow: this.showNearbySatellite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SatelliteList, {\n          isLoad: isLoadingList,\n          satInfo: satInfo,\n          onShowMap: this.showMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 16,\n        className: \"right-side\",\n        children: /*#__PURE__*/_jsxDEV(WorldMap, {\n          satData: satList,\n          observerData: setting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"names":["React","Component","Row","Col","axios","BASE_URL","NEARBY_SATELLITE","SAT_API_KEY","STARLINK_CATEGORY","SatSetting","SatelliteList","WorldMap","Main","constructor","showMap","selected","setState","preState","satList","showNearbySatellite","setting","isLoadingList","fetchSatellite","latitude","longitude","elevation","altitude","url","get","then","response","console","log","data","satInfo","catch","error","state","render"],"sources":["/Users/boyuxu/IdeaProjects/laoOffer/starlink/src/components/Main.js"],"sourcesContent":["import React, {Component} from 'react';\nimport { Row, Col } from 'antd';\nimport axios from 'axios';\nimport {BASE_URL, NEARBY_SATELLITE, SAT_API_KEY, STARLINK_CATEGORY } from '../constants';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport WorldMap from './WorldMap';\n\nclass Main extends Component {\n    constructor(){\n        super();\n        this.state = {\n            satInfo: null,\n            satList: null,\n            setting: null,\n            isLoadingList: false\n        }\n    }\n    render() {\n        const { isLoadingList, satInfo, satList, setting } = this.state;\n        return (\n            <Row className='main'>\n                <Col span={8} className=\"left-side\">\n                    <SatSetting onShow={this.showNearbySatellite}/>\n                    <SatelliteList isLoad={isLoadingList}\n                                   satInfo={satInfo}\n                                   onShowMap={this.showMap} />\n                </Col>\n                <Col span={16} className=\"right-side\">\n                    <WorldMap satData={satList} observerData={setting} />\n                </Col>\n            </Row>\n        );\n    }\n\n    showMap = (selected) => {\n        this.setState(preState => ({\n            ...preState,\n            satList: [...selected]\n        }))\n    }\n\n    showNearbySatellite = (setting) => {\n        this.setState({\n            isLoadingList: true,\n            setting: setting\n        })\n        this.fetchSatellite(setting);\n    }\n\n    fetchSatellite= (setting) => {\n        const {latitude, longitude, elevation, altitude} = setting;\n        const url = `${BASE_URL}/api/${NEARBY_SATELLITE}/${latitude}/${longitude}/${elevation}/${altitude}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n\n        this.setState({\n            isLoadingList: true\n        });\n\n        axios.get(url)\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    satInfo: response.data,\n                    isLoadingList: false\n                })\n            })\n            .catch(error => {\n                console.log('err in fetch satellite -> ', error);\n            })\n    }\n}\nexport default Main;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,gBAAlB,EAAoCC,WAApC,EAAiDC,iBAAjD,QAA0E,cAA1E;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;EACzBY,WAAW,GAAE;IACT;;IADS,KA0BbC,OA1Ba,GA0BFC,QAAD,IAAc;MACpB,KAAKC,QAAL,CAAcC,QAAQ,KAAK,EACvB,GAAGA,QADoB;QAEvBC,OAAO,EAAE,CAAC,GAAGH,QAAJ;MAFc,CAAL,CAAtB;IAIH,CA/BY;;IAAA,KAiCbI,mBAjCa,GAiCUC,OAAD,IAAa;MAC/B,KAAKJ,QAAL,CAAc;QACVK,aAAa,EAAE,IADL;QAEVD,OAAO,EAAEA;MAFC,CAAd;MAIA,KAAKE,cAAL,CAAoBF,OAApB;IACH,CAvCY;;IAAA,KAyCbE,cAzCa,GAyCIF,OAAD,IAAa;MACzB,MAAM;QAACG,QAAD;QAAWC,SAAX;QAAsBC,SAAtB;QAAiCC;MAAjC,IAA6CN,OAAnD;MACA,MAAMO,GAAG,GAAI,GAAEtB,QAAS,QAAOC,gBAAiB,IAAGiB,QAAS,IAAGC,SAAU,IAAGC,SAAU,IAAGC,QAAS,IAAGlB,iBAAkB,YAAWD,WAAY,EAA9I;MAEA,KAAKS,QAAL,CAAc;QACVK,aAAa,EAAE;MADL,CAAd;MAIAjB,KAAK,CAACwB,GAAN,CAAUD,GAAV,EACKE,IADL,CACUC,QAAQ,IAAI;QACdC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;QACA,KAAKjB,QAAL,CAAc;UACVkB,OAAO,EAAEJ,QAAQ,CAACG,IADR;UAEVZ,aAAa,EAAE;QAFL,CAAd;MAIH,CAPL,EAQKc,KARL,CAQWC,KAAK,IAAI;QACZL,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,KAA1C;MACH,CAVL;IAWH,CA5DY;;IAET,KAAKC,KAAL,GAAa;MACTH,OAAO,EAAE,IADA;MAEThB,OAAO,EAAE,IAFA;MAGTE,OAAO,EAAE,IAHA;MAITC,aAAa,EAAE;IAJN,CAAb;EAMH;;EACDiB,MAAM,GAAG;IACL,MAAM;MAAEjB,aAAF;MAAiBa,OAAjB;MAA0BhB,OAA1B;MAAmCE;IAAnC,IAA+C,KAAKiB,KAA1D;IACA,oBACI,QAAC,GAAD;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI,QAAC,GAAD;QAAK,IAAI,EAAE,CAAX;QAAc,SAAS,EAAC,WAAxB;QAAA,wBACI,QAAC,UAAD;UAAY,MAAM,EAAE,KAAKlB;QAAzB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,aAAD;UAAe,MAAM,EAAEE,aAAvB;UACe,OAAO,EAAEa,OADxB;UAEe,SAAS,EAAE,KAAKpB;QAF/B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI,QAAC,GAAD;QAAK,IAAI,EAAE,EAAX;QAAe,SAAS,EAAC,YAAzB;QAAA,uBACI,QAAC,QAAD;UAAU,OAAO,EAAEI,OAAnB;UAA4B,YAAY,EAAEE;QAA1C;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAaH;;AAzBwB;;AA+D7B,eAAeR,IAAf"},"metadata":{},"sourceType":"module"}