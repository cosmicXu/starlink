{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSMotionList from \"rc-animate/es/CSSMotionList\";\nimport Selection from './Selection';\nimport SearchInput from '../../SearchInput';\nvar NODE_SELECTOR = 'selector';\nvar NODE_SEARCH = 'search';\nvar TREE_SELECT_EMPTY_VALUE_KEY = 'RC_TREE_SELECT_EMPTY_VALUE_KEY';\n\nvar SelectorList = function SelectorList(props) {\n  var selectorValueList = props.selectorValueList,\n      choiceTransitionName = props.choiceTransitionName,\n      prefixCls = props.prefixCls,\n      onChoiceAnimationLeave = props.onChoiceAnimationLeave,\n      labelInValue = props.labelInValue,\n      maxTagCount = props.maxTagCount,\n      maxTagPlaceholder = props.maxTagPlaceholder,\n      showSearch = props.showSearch,\n      valueEntities = props.valueEntities,\n      inputRef = props.inputRef,\n      onMultipleSelectorRemove = props.onMultipleSelectorRemove;\n  var nodeKeys = []; // Check if `maxTagCount` is set\n\n  var myValueList = selectorValueList;\n\n  if (maxTagCount >= 0) {\n    myValueList = selectorValueList.slice(0, maxTagCount);\n  } // Basic selectors\n\n\n  myValueList.forEach(function (_ref) {\n    var label = _ref.label,\n        value = _ref.value;\n\n    var _ref2 = (valueEntities[value] || {}).node || {},\n        _ref2$props = _ref2.props;\n\n    _ref2$props = _ref2$props === void 0 ? {} : _ref2$props;\n    var disabled = _ref2$props.disabled;\n    nodeKeys.push({\n      key: value,\n      type: NODE_SELECTOR,\n      label: label,\n      value: value,\n      disabled: disabled\n    });\n  }); // Rest node count\n\n  if (maxTagCount >= 0 && maxTagCount < selectorValueList.length) {\n    var content = \"+ \".concat(selectorValueList.length - maxTagCount, \" ...\");\n\n    if (typeof maxTagPlaceholder === 'string') {\n      content = maxTagPlaceholder;\n    } else if (typeof maxTagPlaceholder === 'function') {\n      var restValueList = selectorValueList.slice(maxTagCount);\n      content = maxTagPlaceholder(labelInValue ? restValueList : restValueList.map(function (_ref3) {\n        var value = _ref3.value;\n        return value;\n      }));\n    }\n\n    nodeKeys.push({\n      key: 'rc-tree-select-internal-max-tag-counter',\n      type: NODE_SELECTOR,\n      label: content,\n      value: null,\n      disabled: true\n    });\n  } // Search node\n\n\n  if (showSearch !== false) {\n    nodeKeys.push({\n      key: '__input',\n      type: NODE_SEARCH\n    });\n  }\n\n  return React.createElement(CSSMotionList, {\n    keys: nodeKeys,\n    className: \"\".concat(prefixCls, \"-selection__rendered\"),\n    component: \"ul\",\n    role: \"menubar\",\n    motionName: choiceTransitionName,\n    onLeaveEnd: onChoiceAnimationLeave\n  }, function (_ref4) {\n    var type = _ref4.type,\n        label = _ref4.label,\n        value = _ref4.value,\n        disabled = _ref4.disabled,\n        className = _ref4.className,\n        style = _ref4.style;\n\n    if (type === NODE_SELECTOR) {\n      return React.createElement(Selection, _extends({}, props, {\n        className: className,\n        style: style,\n        key: value || TREE_SELECT_EMPTY_VALUE_KEY,\n        label: label,\n        value: value,\n        onRemove: disabled ? null : onMultipleSelectorRemove\n      }));\n    }\n\n    return React.createElement(\"li\", {\n      className: \"\".concat(prefixCls, \"-search \").concat(prefixCls, \"-search--inline\")\n    }, React.createElement(SearchInput, _extends({}, props, {\n      ref: inputRef,\n      needAlign: true\n    })));\n  });\n};\n\nSelectorList.propTypes = {\n  selectorValueList: PropTypes.array,\n  choiceTransitionName: PropTypes.string,\n  prefixCls: PropTypes.string,\n  onChoiceAnimationLeave: PropTypes.func,\n  labelInValue: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  maxTagCount: PropTypes.number,\n  maxTagPlaceholder: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  valueEntities: PropTypes.object,\n  inputRef: PropTypes.func,\n  onMultipleSelectorRemove: PropTypes.func\n};\nexport default SelectorList;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","PropTypes","CSSMotionList","Selection","SearchInput","NODE_SELECTOR","NODE_SEARCH","TREE_SELECT_EMPTY_VALUE_KEY","SelectorList","props","selectorValueList","choiceTransitionName","prefixCls","onChoiceAnimationLeave","labelInValue","maxTagCount","maxTagPlaceholder","showSearch","valueEntities","inputRef","onMultipleSelectorRemove","nodeKeys","myValueList","slice","forEach","_ref","label","value","_ref2","node","_ref2$props","disabled","push","type","content","concat","restValueList","map","_ref3","createElement","keys","className","component","role","motionName","onLeaveEnd","_ref4","style","onRemove","ref","needAlign","propTypes","array","string","func","bool","number","oneOfType","object"],"sources":["/Users/boyuxu/IdeaProjects/laoOffer/starlink/node_modules/rc-tree-select/es/Selector/MultipleSelector/SelectorList.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSMotionList from \"rc-animate/es/CSSMotionList\";\nimport Selection from './Selection';\nimport SearchInput from '../../SearchInput';\nvar NODE_SELECTOR = 'selector';\nvar NODE_SEARCH = 'search';\nvar TREE_SELECT_EMPTY_VALUE_KEY = 'RC_TREE_SELECT_EMPTY_VALUE_KEY';\n\nvar SelectorList = function SelectorList(props) {\n  var selectorValueList = props.selectorValueList,\n      choiceTransitionName = props.choiceTransitionName,\n      prefixCls = props.prefixCls,\n      onChoiceAnimationLeave = props.onChoiceAnimationLeave,\n      labelInValue = props.labelInValue,\n      maxTagCount = props.maxTagCount,\n      maxTagPlaceholder = props.maxTagPlaceholder,\n      showSearch = props.showSearch,\n      valueEntities = props.valueEntities,\n      inputRef = props.inputRef,\n      onMultipleSelectorRemove = props.onMultipleSelectorRemove;\n  var nodeKeys = []; // Check if `maxTagCount` is set\n\n  var myValueList = selectorValueList;\n\n  if (maxTagCount >= 0) {\n    myValueList = selectorValueList.slice(0, maxTagCount);\n  } // Basic selectors\n\n\n  myValueList.forEach(function (_ref) {\n    var label = _ref.label,\n        value = _ref.value;\n\n    var _ref2 = (valueEntities[value] || {}).node || {},\n        _ref2$props = _ref2.props;\n\n    _ref2$props = _ref2$props === void 0 ? {} : _ref2$props;\n    var disabled = _ref2$props.disabled;\n    nodeKeys.push({\n      key: value,\n      type: NODE_SELECTOR,\n      label: label,\n      value: value,\n      disabled: disabled\n    });\n  }); // Rest node count\n\n  if (maxTagCount >= 0 && maxTagCount < selectorValueList.length) {\n    var content = \"+ \".concat(selectorValueList.length - maxTagCount, \" ...\");\n\n    if (typeof maxTagPlaceholder === 'string') {\n      content = maxTagPlaceholder;\n    } else if (typeof maxTagPlaceholder === 'function') {\n      var restValueList = selectorValueList.slice(maxTagCount);\n      content = maxTagPlaceholder(labelInValue ? restValueList : restValueList.map(function (_ref3) {\n        var value = _ref3.value;\n        return value;\n      }));\n    }\n\n    nodeKeys.push({\n      key: 'rc-tree-select-internal-max-tag-counter',\n      type: NODE_SELECTOR,\n      label: content,\n      value: null,\n      disabled: true\n    });\n  } // Search node\n\n\n  if (showSearch !== false) {\n    nodeKeys.push({\n      key: '__input',\n      type: NODE_SEARCH\n    });\n  }\n\n  return React.createElement(CSSMotionList, {\n    keys: nodeKeys,\n    className: \"\".concat(prefixCls, \"-selection__rendered\"),\n    component: \"ul\",\n    role: \"menubar\",\n    motionName: choiceTransitionName,\n    onLeaveEnd: onChoiceAnimationLeave\n  }, function (_ref4) {\n    var type = _ref4.type,\n        label = _ref4.label,\n        value = _ref4.value,\n        disabled = _ref4.disabled,\n        className = _ref4.className,\n        style = _ref4.style;\n\n    if (type === NODE_SELECTOR) {\n      return React.createElement(Selection, _extends({}, props, {\n        className: className,\n        style: style,\n        key: value || TREE_SELECT_EMPTY_VALUE_KEY,\n        label: label,\n        value: value,\n        onRemove: disabled ? null : onMultipleSelectorRemove\n      }));\n    }\n\n    return React.createElement(\"li\", {\n      className: \"\".concat(prefixCls, \"-search \").concat(prefixCls, \"-search--inline\")\n    }, React.createElement(SearchInput, _extends({}, props, {\n      ref: inputRef,\n      needAlign: true\n    })));\n  });\n};\n\nSelectorList.propTypes = {\n  selectorValueList: PropTypes.array,\n  choiceTransitionName: PropTypes.string,\n  prefixCls: PropTypes.string,\n  onChoiceAnimationLeave: PropTypes.func,\n  labelInValue: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  maxTagCount: PropTypes.number,\n  maxTagPlaceholder: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  valueEntities: PropTypes.object,\n  inputRef: PropTypes.func,\n  onMultipleSelectorRemove: PropTypes.func\n};\nexport default SelectorList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}