{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { Children } from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from 'warning';\nimport TreeNode from './TreeNode';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\nvar onlyTreeNodeWarned = false;\nexport function warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n  onlyTreeNodeWarned = true;\n  warning(false, 'Tree only accept TreeNode as children.');\n}\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nexport function isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nexport function getNodeChildren(children) {\n  return toArray(children).filter(isTreeNode);\n}\nexport function isCheckDisabled(node) {\n  var _ref = node.props || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox,\n      checkable = _ref.checkable;\n\n  return !!(disabled || disableCheckbox) || checkable === false;\n}\nexport function traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? node.props.children : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0; // Filter children\n\n    var childList = getNodeChildren(children); // Process node if is not root\n\n    if (node) {\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: node.key || pos,\n        parentPos: parent.node ? parent.pos : null\n      };\n      callback(data);\n    } // Process children node\n\n\n    Children.forEach(childList, function (subNode, subIndex) {\n      processNode(subNode, subIndex, {\n        node: node,\n        pos: pos\n      });\n    });\n  }\n\n  processNode(null);\n}\n/**\n * Use `rc-util` `toArray` to get the children list which keeps the key.\n * And return single node if children is only one(This can avoid `key` missing check).\n */\n\nexport function mapChildren(children, func) {\n  var list = toArray(children).map(func);\n\n  if (list.length === 1) {\n    return list[0];\n  }\n\n  return list;\n}\nexport function getDragNodesKeys(treeNodes, node) {\n  var _node$props = node.props,\n      eventKey = _node$props.eventKey,\n      pos = _node$props.pos;\n  var dragNodesKeys = [];\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n} // Only used when drag, not affect SSR.\n\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n      top = _treeNode$selectHandl.top,\n      bottom = _treeNode$selectHandl.bottom,\n      height = _treeNode$selectHandl.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n/**\n * Since React internal will convert key to string,\n * we need do this to avoid `checkStrictly` use number match\n */\n\nfunction keyListToString(keyList) {\n  if (!keyList) return keyList;\n  return keyList.map(function (key) {\n    return String(key);\n  });\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref3 = processor || {},\n      _ref3$processProps = _ref3.processProps,\n      processProps = _ref3$processProps === void 0 ? internalProcessProps : _ref3$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref4) {\n    var children = _ref4.children,\n        props = _objectWithoutProperties(_ref4, [\"children\"]);\n\n    var childrenNodes = convertDataToTree(children, processor);\n    return React.createElement(TreeNode, Object.assign({}, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\n * @param treeNodes\n * @param processTreeEntity  User can customize the entity\n */\n\nexport function convertTreeToEntities(treeNodes) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      initWrapper = _ref5.initWrapper,\n      processEntity = _ref5.processEntity,\n      onProcessFinished = _ref5.onProcessFinished;\n\n  var posEntities = {};\n  var keyEntities = {};\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n        index = item.index,\n        pos = item.pos,\n        key = item.key,\n        parentPos = item.parentPos;\n    var entity = {\n      node: node,\n      index: index,\n      key: key,\n      pos: pos\n    };\n    posEntities[pos] = entity;\n    keyEntities[key] = entity; // Fill children\n\n    entity.parent = posEntities[parentPos];\n\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n\n  return wrapper;\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (_typeof(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  keyProps.checkedKeys = keyListToString(keyProps.checkedKeys);\n  keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys);\n  return keyProps;\n}\n/**\n * Conduct check state by the keyList. It will conduct up & from the provided key.\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\n */\n\nexport function conductCheck(\n/** list of keys */\nkeyList,\n/** is check the node or not */\nisCheck,\n/** parsed by `convertTreeToEntities` function in Tree */\nkeyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var checkedKeys = {};\n  var halfCheckedKeys = {}; // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys[key] = true;\n  });\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys[key] = true;\n  }); // Conduct up\n\n  function conductUp(key) {\n    if (checkedKeys[key] === isCheck) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n    if (isCheckDisabled(node)) return; // Check child node checked status\n\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref6) {\n      var childKey = _ref6.key;\n      var childChecked = checkedKeys[childKey];\n      var childHalfChecked = halfCheckedKeys[childKey];\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    }); // Update checked status\n\n    if (isCheck) {\n      checkedKeys[key] = everyChildChecked;\n    } else {\n      checkedKeys[key] = false;\n    }\n\n    halfCheckedKeys[key] = someChildChecked;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  } // Conduct down\n\n\n  function conductDown(key) {\n    if (checkedKeys[key] === isCheck) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    var children = entity.children,\n        node = entity.node;\n    if (isCheckDisabled(node)) return;\n    checkedKeys[key] = isCheck;\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n\n  function conduct(key) {\n    var entity = keyEntities[key];\n\n    if (!entity) {\n      warning(false, \"'\".concat(key, \"' does not exist in the tree.\"));\n      return;\n    }\n\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n    checkedKeys[key] = isCheck;\n    if (isCheckDisabled(node)) return; // Conduct down\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    }); // Conduct up\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n  var checkedKeyList = [];\n  var halfCheckedKeyList = []; // Fill checked list\n\n  Object.keys(checkedKeys).forEach(function (key) {\n    if (checkedKeys[key]) {\n      checkedKeyList.push(key);\n    }\n  }); // Fill half checked list\n\n  Object.keys(halfCheckedKeys).forEach(function (key) {\n    if (!checkedKeys[key] && halfCheckedKeys[key]) {\n      halfCheckedKeyList.push(key);\n    }\n  });\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = {};\n\n  function conductUp(key) {\n    if (expandedKeys[key]) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys[key] = true;\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.props && node.props.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return Object.keys(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\nexport function getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n\n    return prev;\n  }, {});\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","call","sourceKeys","keys","React","Children","toArray","warning","TreeNode","DRAG_SIDE_RANGE","DRAG_MIN_GAP","onlyTreeNodeWarned","warnOnlyTreeNode","arrDel","list","value","clone","slice","index","splice","arrAdd","push","posToArr","pos","split","getPosition","level","concat","isTreeNode","node","type","getNodeChildren","children","filter","isCheckDisabled","_ref","props","disabled","disableCheckbox","checkable","traverseTreeNodes","treeNodes","callback","processNode","parent","childList","data","parentPos","forEach","subNode","subIndex","mapChildren","func","map","getDragNodesKeys","_node$props","eventKey","dragNodesKeys","_ref2","calcDropPosition","event","treeNode","clientY","_treeNode$selectHandl","selectHandle","getBoundingClientRect","top","bottom","height","des","Math","max","calcSelectedKeys","selectedKeys","undefined","multiple","keyListToString","keyList","String","internalProcessProps","convertDataToTree","treeData","processor","_ref3","_ref3$processProps","processProps","Array","isArray","_ref4","childrenNodes","createElement","assign","convertTreeToEntities","_ref5","arguments","initWrapper","processEntity","onProcessFinished","posEntities","keyEntities","wrapper","item","entity","parseCheckedKeys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","conductCheck","isCheck","checkStatus","conductUp","everyChildChecked","someChildChecked","child","_ref6","childKey","childChecked","childHalfChecked","conductDown","conduct","checkedKeyList","halfCheckedKeyList","conductExpandParent","expandedKeys","getDataAndAria","reduce","prev","substr"],"sources":["/Users/boyuxu/IdeaProjects/laoOffer/starlink/node_modules/rc-tree/es/util.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Children } from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from 'warning';\nimport TreeNode from './TreeNode';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\nvar onlyTreeNodeWarned = false;\nexport function warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n  onlyTreeNodeWarned = true;\n  warning(false, 'Tree only accept TreeNode as children.');\n}\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nexport function isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nexport function getNodeChildren(children) {\n  return toArray(children).filter(isTreeNode);\n}\nexport function isCheckDisabled(node) {\n  var _ref = node.props || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox,\n      checkable = _ref.checkable;\n\n  return !!(disabled || disableCheckbox) || checkable === false;\n}\nexport function traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? node.props.children : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0; // Filter children\n\n    var childList = getNodeChildren(children); // Process node if is not root\n\n    if (node) {\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: node.key || pos,\n        parentPos: parent.node ? parent.pos : null\n      };\n      callback(data);\n    } // Process children node\n\n\n    Children.forEach(childList, function (subNode, subIndex) {\n      processNode(subNode, subIndex, {\n        node: node,\n        pos: pos\n      });\n    });\n  }\n\n  processNode(null);\n}\n/**\n * Use `rc-util` `toArray` to get the children list which keeps the key.\n * And return single node if children is only one(This can avoid `key` missing check).\n */\n\nexport function mapChildren(children, func) {\n  var list = toArray(children).map(func);\n\n  if (list.length === 1) {\n    return list[0];\n  }\n\n  return list;\n}\nexport function getDragNodesKeys(treeNodes, node) {\n  var _node$props = node.props,\n      eventKey = _node$props.eventKey,\n      pos = _node$props.pos;\n  var dragNodesKeys = [];\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n} // Only used when drag, not affect SSR.\n\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n      top = _treeNode$selectHandl.top,\n      bottom = _treeNode$selectHandl.bottom,\n      height = _treeNode$selectHandl.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n/**\n * Since React internal will convert key to string,\n * we need do this to avoid `checkStrictly` use number match\n */\n\nfunction keyListToString(keyList) {\n  if (!keyList) return keyList;\n  return keyList.map(function (key) {\n    return String(key);\n  });\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref3 = processor || {},\n      _ref3$processProps = _ref3.processProps,\n      processProps = _ref3$processProps === void 0 ? internalProcessProps : _ref3$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref4) {\n    var children = _ref4.children,\n        props = _objectWithoutProperties(_ref4, [\"children\"]);\n\n    var childrenNodes = convertDataToTree(children, processor);\n    return React.createElement(TreeNode, Object.assign({}, processProps(props)), childrenNodes);\n  });\n}\n/**\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\n * @param treeNodes\n * @param processTreeEntity  User can customize the entity\n */\n\nexport function convertTreeToEntities(treeNodes) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      initWrapper = _ref5.initWrapper,\n      processEntity = _ref5.processEntity,\n      onProcessFinished = _ref5.onProcessFinished;\n\n  var posEntities = {};\n  var keyEntities = {};\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n        index = item.index,\n        pos = item.pos,\n        key = item.key,\n        parentPos = item.parentPos;\n    var entity = {\n      node: node,\n      index: index,\n      key: key,\n      pos: pos\n    };\n    posEntities[pos] = entity;\n    keyEntities[key] = entity; // Fill children\n\n    entity.parent = posEntities[parentPos];\n\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n\n  return wrapper;\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (_typeof(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  keyProps.checkedKeys = keyListToString(keyProps.checkedKeys);\n  keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys);\n  return keyProps;\n}\n/**\n * Conduct check state by the keyList. It will conduct up & from the provided key.\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\n */\n\nexport function conductCheck(\n/** list of keys */\nkeyList,\n/** is check the node or not */\nisCheck,\n/** parsed by `convertTreeToEntities` function in Tree */\nkeyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var checkedKeys = {};\n  var halfCheckedKeys = {}; // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys[key] = true;\n  });\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys[key] = true;\n  }); // Conduct up\n\n  function conductUp(key) {\n    if (checkedKeys[key] === isCheck) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n    if (isCheckDisabled(node)) return; // Check child node checked status\n\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref6) {\n      var childKey = _ref6.key;\n      var childChecked = checkedKeys[childKey];\n      var childHalfChecked = halfCheckedKeys[childKey];\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    }); // Update checked status\n\n    if (isCheck) {\n      checkedKeys[key] = everyChildChecked;\n    } else {\n      checkedKeys[key] = false;\n    }\n\n    halfCheckedKeys[key] = someChildChecked;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  } // Conduct down\n\n\n  function conductDown(key) {\n    if (checkedKeys[key] === isCheck) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    var children = entity.children,\n        node = entity.node;\n    if (isCheckDisabled(node)) return;\n    checkedKeys[key] = isCheck;\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n\n  function conduct(key) {\n    var entity = keyEntities[key];\n\n    if (!entity) {\n      warning(false, \"'\".concat(key, \"' does not exist in the tree.\"));\n      return;\n    }\n\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n    checkedKeys[key] = isCheck;\n    if (isCheckDisabled(node)) return; // Conduct down\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    }); // Conduct up\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n  var checkedKeyList = [];\n  var halfCheckedKeyList = []; // Fill checked list\n\n  Object.keys(checkedKeys).forEach(function (key) {\n    if (checkedKeys[key]) {\n      checkedKeyList.push(key);\n    }\n  }); // Fill half checked list\n\n  Object.keys(halfCheckedKeys).forEach(function (key) {\n    if (!checkedKeys[key] && halfCheckedKeys[key]) {\n      halfCheckedKeyList.push(key);\n    }\n  });\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = {};\n\n  function conductUp(key) {\n    if (expandedKeys[key]) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys[key] = true;\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.props && node.props.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return Object.keys(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\nexport function getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n\n    return prev;\n  }, {});\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}